'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withPostsFilterBy = exports.sortByDate = exports.inCategory = exports.entries = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _hoistNonReactStatics = require('hoist-non-react-statics');

var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

var _load = require('../entries/load');

var _load2 = _interopRequireDefault(_load);

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var entries = exports.entries = _load2.default;

var inCategory = exports.inCategory = function inCategory(category) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$includeSubCatego = _ref.includeSubCategories,
      includeSubCategories = _ref$includeSubCatego === undefined ? false : _ref$includeSubCatego;

  return function (post) {
    var data = post.data;
    var _data$category = data.category,
        postCategory = _data$category === undefined ? '' : _data$category;

    var result = !includeSubCategories ? postCategory === category : postCategory.startsWith(category);

    return category ? result : true;
  };
};

var sortByDate = exports.sortByDate = function sortByDate(a, b) {
  var aTime = new Date(a.data.date).getTime();
  var bTime = new Date(b.data.date).getTime();
  return bTime - aTime;
};

var withPostsFilterBy = exports.withPostsFilterBy = function withPostsFilterBy(filter) {
  return function (WrappedComponent) {
    var _class, _temp;

    var displayName = (0, _utils.getDisplayName)(WrappedComponent);
    var postfix = filter ? 'FilterBy' : '';

    return (0, _hoistNonReactStatics2.default)((_temp = _class = function (_Component) {
      _inherits(_class, _Component);

      function _class() {
        _classCallCheck(this, _class);

        return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
      }

      _createClass(_class, [{
        key: 'render',
        value: function render() {
          return _react2.default.createElement(WrappedComponent, this.props);
        }
      }], [{
        key: 'getInitialProps',
        value: async function getInitialProps() {
          var wrappedInitial = WrappedComponent.getInitialProps;
          var wrapped = wrappedInitial ? await wrappedInitial.apply(undefined, arguments) : {};
          var all = await (0, _load2.default)();
          var posts = filter ? all.filter(filter) : all;

          return _extends({}, wrapped, {
            posts: posts
          });
        }
      }]);

      return _class;
    }(_react.Component), _class.displayName = 'WithPosts' + postfix + '(' + displayName + ')', _temp), WrappedComponent, { 'getInitialProps': true });
  };
};

var withPosts = withPostsFilterBy();

exports.default = withPosts;